# .semaphore/semaphore.yml
# Use the latest stable version of Semaphore 2.0 YML syntax:
version: v1.0

# Name your pipeline. In case you connect multiple pipelines with promotions,
# the name will help you differentiate between, for example, a CI build phase
# and delivery phases.
name: Flask Docker CI

# An agent defines the environment in which your code runs.
# It is a combination of one of available machine types and operating
# system images.
# See https://docs.semaphoreci.com/article/20-machine-types
# and https://docs.semaphoreci.com/article/32-ubuntu-1804-image
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804

# Blocks are the heart of a pipeline and are executed sequentially.
# Each block has a task that defines one or more jobs. Jobs define the
# commands to execute.
# See https://docs.semaphoreci.com/article/62-concepts
blocks:
  - name: "Setup Docker and docker-compose"
    task:
      jobs:
        - name: docker-compose
          commands:
            - checkout
            - docker-compose up -d --build
            - docker-compose ps
            - docker-compose down

  #- name: "Run Unit tests"
  #  task:
  #    jobs:
  #      - name: phpunit
  #        commands:
  #          - checkout
  #          - cache restore
            # We are setting up the .env file from our example file which contains Semaphore DB data and proper app URL
  #          - cp .env.example .env
            # We need to generate an application key for Laravel to work.
  #          - php artisan key:generate
            # Run the unit tests from the phpunit binary in vendor folder
  #          - ./vendor/bin/phpunit
